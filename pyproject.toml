[build-system]
requires = ["ase", "numpy", "scipy", "spglib", "hatchling==1.27.0", "hatch-vcs==0.5.0"]
build-backend = "hatchling.build"

[project]
name = "atomistics"
description = "Interfaces for atomistic simulation codes and workflows"
authors = [
    { name = "Jan Janssen", email = "janssen@mpie.de" },
]
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["pyiron"]
requires-python = ">=3.9, <3.14"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: BSD License",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "ase==3.26.0",
    "numpy==2.3.3",
    "scipy==1.16.2",
    "spglib==2.6.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/pyiron/atomistics"
Documentation = "https://atomistics.readthedocs.io"
Repository = "https://github.com/pyiron/atomistics"

[project.optional-dependencies]
phonopy = [
    "phonopy==2.43.2",
    "seekpath==2.1.0",
    "structuretoolkit==0.0.35",
]
gpaw = [
    "gpaw==25.7.0",
]
lammps = [
    "pylammpsmpi==0.3.5",
    "jinja2==3.1.6",
    "pandas==2.3.3",
    "pyiron_lammps==0.4.8",
]
lammps_phonons = [
    "pylammpsmpi==0.3.5",
    "jinja2==3.1.6",
    "pandas==2.3.3",
    "dynaphopy==1.18.0",
    "pyiron_lammps==0.4.8",
]
experimental = [
    "lxml==6.0.2",
    "mendeleev==1.1.0",
    "pandas==2.3.3",
    "requests==2.32.5",
]
sphinxdft = [
    "sphinx-parser==0.1.3"
]
qe = [
    "pwtools==1.3.0"
]
tqdm = [
    "tqdm==4.67.1"
]
vasp = [
    "pyiron_vasp==0.2.14"
]

[tool.hatch.build]
include = [
    "atomistics"
]

[tool.hatch.build.hooks.vcs]
version-file = "atomistics/_version.py"

[tool.hatch.build.targets.sdist]
include = [
    "atomistics"
]

[tool.hatch.build.targets.wheel]
packages = [
    "atomistics"
]

[tool.hatch.version]
source = "vcs"
path = "atomistics/_version.py"

[tool.ruff]
exclude = [".ci_support", "docs", "notebooks", "tests", "setup.py", "_version.py"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # flake8-comprehensions
    "C4",
    # eradicate
    "ERA",
    # pylint
    "PL",
]
ignore = [
    # ignore function call in argument defaults
    "B008",
    # ignore cache
    "B019",
    # ignore star-arg unpacking after a keyword argument
    "B026",
    # ignore line-length violations
    "E501",
    # ignore unused imports in init files
    "F401",
    # ignore imports which are not at the top of a module
    "PLC0415",
    # ignore invalid format for __all__
    "PLE0605",
    # Too many arguments in function definition
    "PLR0913",
    # Magic value used in comparison
    "PLR2004",
    # Too many statements
    "PLR0915",
    # ignore overwritten variables in for-loop
    "PLW2901",
    # ignore key in type
    "SIM118",
]

[tool.coverage.run]
omit = ["atomistics/_version.py", "tests/*"]
command_line = "-m unittest discover tests"
